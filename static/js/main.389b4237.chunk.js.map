{"version":3,"sources":["serviceWorker.js","Components/IntroDescription/index.js","Components/BubblesHeader/index.js","Components/MostlySaneAnime/index.js","App.js","index.js","utils.js"],"names":["Boolean","window","location","hostname","match","SimpleApp","className","href","Bubbles","useState","widthOfAnimation","setWidthOfAnimation","header","useRef","centered","theme","useTheme","useMemo","bArray","i","push","length","bubble","childNodes","forEach","x","removeChild","createBubble","appendChild","init","current","setWidth","useCallback","offsetWidth","useEffect","addEventListener","removeEventListener","ref","sArray","circleContainer","document","createElement","classList","add","style","left","randomValue","animationDelay","Math","random","size","background","currentTheme","color","width","height","arr","floor","useStyles","makeStyles","imageContainer","border","borderWidth","MostlySane","classes","app","body","App","Root","max","allThemes","Object","keys","themeCollection","themes","randomThemePos","palette","type","ThemeProvider","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.389b4237.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Fragment } from \"react\";\nimport \"./IntroDescription.css\";\n\nconst SimpleApp = () => {\n  return (\n    <Fragment>\n      <div className=\"tagline\">Love to Code | Draw | Travel | Learn</div>\n      <div className={`icons-social`}>\n        <a href=\"https://github.com/pratheekbhandary\">\n          <i className=\"fab fa-github\"></i>\n        </a>\n        <a href=\"https://twitter.com/PratheekBhandry\">\n          <i className=\"fab fa-twitter\"></i>\n        </a>\n\n        <a href=\"https://www.artstation.com/pratheekbhandary\">\n          <i className=\"fab fa-artstation\"></i>\n        </a>\n        <a href=\"https://www.linkedin.com/in/pratheekbhandary/\">\n          <i className=\"fab fa-linkedin\"></i>\n        </a>\n        <a href=\"https://codesandbox.io/u/pratheekbhandary\">\n          <i className=\"fas fa-cube\"></i>\n        </a>\n        <a href=\"https://codesandbox.io/u/pratheek-arista\">\n          <i className=\"fas fa-cube\"></i>\n        </a>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default SimpleApp;\n","import React, {\n  useMemo,\n  useState,\n  useCallback,\n  useEffect,\n  useRef\n} from \"react\";\nimport { useTheme } from \"@material-ui/styles\";\nimport \"./BubbleHeader.css\";\nimport IntroDescription from \"../IntroDescription\";\n\nexport default function Bubbles() {\n  const [widthOfAnimation, setWidthOfAnimation] = useState(0);\n  const header = useRef(null);\n  const centered = useRef(null);\n  const theme = useTheme();\n\n  useMemo(() => {\n    const bArray = [];\n    for (let i = 0; i < widthOfAnimation; i++) {\n      bArray.push(i);\n    }\n    bArray.length && init(centered.current, bArray, theme);\n  }, [theme, widthOfAnimation]);\n\n  const setWidth = useCallback(() => {\n    setWidthOfAnimation(header.current.offsetWidth);\n  }, [setWidthOfAnimation]);\n\n  useEffect(() => {\n    setWidth();\n    window.addEventListener(\"resize\", setWidth);\n    return () => window.removeEventListener(\"resize\", setWidth);\n  }, [setWidth, widthOfAnimation]);\n\n  return (\n    <div className=\"centered\" ref={centered}>\n      <h1 className=\"bubbles\" ref={header}>\n        Heya I'm Pratheek Bhandary\n      </h1>\n      <IntroDescription />\n    </div>\n  );\n}\n\nconst bubbleLifeTime = 10;\nconst noOfBubbles = 20;\nvar sArray = [4, 6, 8, 10, 12];\n\nfunction init(centered, bArray, theme) {\n  var bubble;\n  centered.childNodes.forEach(x => {\n    if (\"circle_container\" === x.className) {\n      centered.removeChild(x);\n    }\n  });\n  for (var i = 0; i < noOfBubbles; i++) {\n    bubble = createBubble(bArray, theme);\n    centered.appendChild(bubble);\n  }\n}\n\nfunction createBubble(bArray, theme) {\n  var circleContainer = document.createElement(\"div\");\n  circleContainer.classList.add(\"circle_container\");\n  circleContainer.style.left = randomValue(bArray) + \"px\";\n  circleContainer.style.animationDelay = Math.random() * bubbleLifeTime + \"s\";\n  var size = randomValue(sArray);\n  circleContainer.style.background = theme.currentTheme.color;\n  circleContainer.style.width = size + \"px\";\n  circleContainer.style.height = size + \"px\";\n\n  return circleContainer;\n}\n\nfunction randomValue(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n","import React from \"react\";\nimport \"./MostlySaneAnime.css\";\nimport Bubbles from \"../BubblesHeader\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  imageContainer: {\n    \"&:after\": {\n      border: `solid ${theme.currentTheme.color}`,\n      borderWidth: \"0px\"\n    }\n  }\n}));\n\nexport default function MostlySane() {\n  const classes = useStyles();\n  return (\n    <div className=\"mostly-sane-container\">\n      <div className={`one image-container ${classes.imageContainer}`}></div>\n      <div className={`two image-container ${classes.imageContainer}`}></div>\n      <div className={`three image-container ${classes.imageContainer}`}></div>\n      <div className={`four image-container ${classes.imageContainer}`}></div>\n      <Bubbles />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport \"./App.css\";\nimport MostlySane from \"./Components/MostlySaneAnime\";\n\nconst useStyles = makeStyles(theme => ({\n  app: {\n    background: theme.currentTheme.background,\n    color: theme.currentTheme.color\n  },\n  \"@global\": {\n    body: {\n      ...theme.currentTheme\n    }\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div className={`App ${classes.app}`}>\n      <MostlySane />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { useMemo } from \"react\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport themeCollection from \"./theme/theme.json\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\nimport { getRandomInt } from \"./utils\";\n\nfunction Root() {\n  const theme = useMemo(() => {\n    const allThemes = Object.keys(themeCollection.themes);\n    const randomThemePos = getRandomInt(allThemes.length);\n    const currentTheme = themeCollection.themes[allThemes[randomThemePos]];\n    return {\n      palette: {\n        type: false ? \"dark\" : \"light\"\n      },\n      currentTheme\n    };\n  }, []);\n\n  return (\n    theme && (\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    )\n  );\n}\n\nexport default App;\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { useRef, useEffect } from \"react\";\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport function getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n"],"sourceRoot":""}